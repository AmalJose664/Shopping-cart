<section>
    <div class="container mt-5">
        <form action="hdshdihsd" id="checkout-form" method="post" >
            <div class="row">
                <div class="col-md-6 shadow-hover" style="background-color: #f9f9f9; padding: 10px; border-radius: 8px;" >
                    <h2> Enter delivery details</h2><br>
                    <div>
                        <label for="address">Address</label>
                        <input type="text" class="form-control forms" required name="address" id="address" >

                        <label for="pincode">PinCode</label>
                        <input type="number" class="form-control forms" required name="pincode" id="pincode" >
                        
                        <label for="mobile">Mobile</label>
                        <input type="number" class="form-control forms" required name="mobile" id="mobile">
                        <input type="hidden" name="userId" value="{{user._id}}">
                        <br>
                        <p style="color: red;" id="info"></p>
                    </div>
                </div>
                <div class="col-md-4 " >
                    <div class="container mt-5 ml-5 checkout shadow-hover" style="background-color: #f9f9f9;">
                        <h5>Total Amount : Rs. <span id="money">{{total}}</span> /~</h5>
                        <hr>
                        <div class="payment">
                            <p>Payment Method</p>
                            <label for="paymentMethod" class="radio-inline">
                            <input type="radio"  required name="paymentMethod" value="COD" checked>COD
                            </label>

                            <label for="paymentMethod"class="radio-inline mt-2">
                            <input type="radio" required name="paymentMethod" value="Online"  >Online Payment
                            </label>
                            <button class="btn-primary btn float-right  jsSubmit" type="button">CheckOut</button>
                           
                        </div>
                    </div>
                </div>
            </div>
        </form>
        
    </div>
    <div style="display: flex;justify-content: center;">
        
        <div id="lottie-animation" style="visibility: hidden;width: 400px; height: 400px;"></div>
    </div>
   
</section>

<p class="text-center" id="time" style="position: fixed; bottom: 100px; left: 47%; color: blue;"></p>
<p class="text-center" id="err" style="color: blue;"></p>
<style>

    input[type=radio]{
        width: 20px;
        height: 20px;
    }
    label.radio-inline{
        display: flex;
        align-items: center;
    }
    .checkout{
        border: 1px solid;
        border-radius: 3px;
        padding: 30px;
    }.payment{
        padding-bottom: 16px;
    }
</style>
<script>

    
    function gotoNextOrderSuccess(){
        let form = document.createElement('form')
        form.method = 'post'
        form.action = '/order-success'
        document.body.append(form)
        form.submit()
    }
    let jsSubmit = document.querySelector('.jsSubmit')
    let money = document.getElementById('money')
    if (money.textContent=='0'){
        jsSubmit.remove()
    }
    jsSubmit.addEventListener('click', formsSubmit)

        function formsSubmit() {
            let filled=true
            //let form = document.getElementById("checkout-form")
             let forms= document.querySelectorAll('.forms')
            //console.log(forms,form)
            forms.forEach((value)=>{
                if(value.value==""){
                    filled=false
                }
            })
            if(filled){
                document.getElementById("info").textContent = ""
                 $.ajax({
                    url: '/place-order',
                    method: 'post',
                    data: $('#checkout-form').serialize(),
                    success: (response) => {
                        console.log(response.status)
                        if(response.status==true){
                            
                             openPopup("Order Success!!!", "Your order has been placed!!", 'green', () => {
                                time = document.getElementById('time')
                                document.getElementById('lottie-animation').style.visibility = "visible";
                                lottie.loadAnimation({
                                     container: document.getElementById('lottie-animation'), // the DOM element that will contain the animation
                                     renderer: 'svg', // the renderer (can also be 'canvas' or 'html')
                                     loop: false, // whether the animation should loop
                                     autoplay: true, // whether the animation should start automatically
                                     path: "/images/anim/anime.json" // the path to the animation JSON file
                                 });
                                 second = 4;
                                 setInterval(() => {
                                     second--
                                     time.textContent = "Redirecting in " + second + " s"
                                     if (second <= 0) {
                                         gotoNextOrderSuccess()
                                         //goto netx page
                                     }
                                 }, 1000)
                            })
                            
                            
                        }else if(response.status==='zero'){
                            
                            openPopup("Cart empty!!", "YInsufficeint Products in cart", 'red', () => {
                               
                            })
                            
                        }
                        else{
                            
                            openPopup("Online purchase!", "you chose online.Please fill details on next popup", 'green', () => {
                                razorpayPayment(response)
                            })
                        }
                    }
                })
            }else{
                document.getElementById("info").textContent="Please fill all the input field"
            }
            
           

        }
    function razorpayPayment(order){
        console.log(order)
        var options = {
            "key": "rzp_test_C5l9MdsxWxpNUe", // Enter the Key ID generated from the Dashboard
            "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            "currency": "INR",
            "name": "Shopping Cart",
            "description": "Best  Transaction in the World",
            "image": "/images/paymentphoto1.jpg",//MUST
            "order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
            "handler": function (response) {
                //alert(response.razorpay_payment_id);
                //lert(response.razorpay_order_id);
                //alert(response.razorpay_signature)
                verifyPayment(response,order)
            },
            "prefill": {
                "name": "Enter name",
                "email": "name@example.com",
                "contact": "0000000000"
            },
            "notes": {
                "address": " Corporate Office"
            },
            "theme": {
                "color": "#e44040"
            }
        };
        var rzp1 = new Razorpay(options);
        rzp1.on('payment.failed', function (response) {
           

            openPopup("Payment Failed", response.error.code, 'red', () => {
                openPopup("Payment Failed", response.error.description, 'red', () => {

                })
            })
       
            //alert(response.error.source);
            //alert(response.error.step);
            //alert(response.error.reason);
            //alert(response.error.metadata.order_id);
            //alert(response.error.metadata.payment_id);
        });
        rzp1.open();
    }
    function verifyPayment(payment,order){
        console.log("verify Payement Called")
        $.ajax({
            url:'/verify-payment',
            data:{
                payment,
                order,
            },
            method:'post',
            success:(response)=>{
                if(response.status){
                    //setInterval(()=>{
                        gotoNextOrderSuccess()
                   // },5000)
                    

                }else{
                     openPopup("Payment Failed", "We think it is a technical problem", 'red', () => {
                        
                    })
                }
            }
        })
    }

</script>